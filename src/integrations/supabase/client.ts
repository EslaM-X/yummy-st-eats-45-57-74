
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://podtrairfwunyjzdvmst.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBvZHRyYWlyZnd1bnlqemR2bXN0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NTA3MzYsImV4cCI6MjA2MzQyNjczNn0.yz8ilKnYNLJyLGc-Tpyhd9K5HFzqoUw8xGkhNxexEcU";

// Export full URL and key for use in Edge Functions
export { SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY };

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    detectSessionInUrl: true,
    flowType: 'pkce',
    debug: process.env.NODE_ENV === 'development'
  },
  global: {
    headers: {
      'x-application-name': 'ST🍕 Eat'
    }
  },
  db: {
    schema: 'public'
  },
  realtime: {
    timeout: 60000 // 60 seconds timeout for realtime connections
  }
});

// Authentication helper functions
export const getCurrentUser = async () => {
  try {
    const { data: { session }, error } = await supabase.auth.getSession();
    if (error) throw error;
    
    return session?.user || null;
  } catch (error) {
    console.error('Error getting current user:', error);
    return null;
  }
};

export const getCurrentSession = async () => {
  try {
    const { data: { session }, error } = await supabase.auth.getSession();
    if (error) throw error;
    
    return session;
  } catch (error) {
    console.error('Error getting current session:', error);
    return null;
  }
};

// Add this listener to handle session changes at the application level
if (typeof window !== 'undefined') {
  supabase.auth.onAuthStateChange((event, session) => {
    console.log(`Supabase auth event: ${event}`);
  });
}
